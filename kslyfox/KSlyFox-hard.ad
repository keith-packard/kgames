*deck.numCols: 1
*deck.numRows: 1

*draw.numCols: 1
*draw.numRows: 1

*aces.numCols: 1
*aces.numRows: 4
!*aces.rowMajor: False

*kings.numCols: 1
*kings.numRows: 4
!*kings.rowMajor: True

*Cards.immediateUpdate: False

*row1.numCols: 5
*row1.numRows: 1
*row1.overlap: none

*row2.numCols: 5
*row2.numRows: 1
*row2.overlap: none

*row3.numCols: 5
*row3.numRows: 1
*row3.overlap: none

*row4.numCols: 5
*row4.numRows: 1
*row4.overlap: none

*deck.translations: #override \
	<BtnDown>:	select()

*draw.translations: #override \
	<BtnDown>:	select(source)

*row1.translations: #override \
	Shift<BtnDown>:	select(noop)\n\
	Shift<BtnUp>:	select(expand)\n\
	:<Btn1Down>:	select(source)\n\
	:<BtnUp>:	select(dest)

*row2.translations: #override \
	Shift<BtnDown>:	select(noop)\n\
	Shift<BtnUp>:	select(expand)\n\
	:<Btn1Down>:	select(source)\n\
	:<BtnUp>:	select(dest)

*row3.translations: #override \
	Shift<BtnDown>:	select(noop)\n\
	Shift<BtnUp>:	select(expand)\n\
	:<Btn1Down>:	select(source)\n\
	:<BtnUp>:	select(dest)

*row4.translations: #override \
	Shift<BtnDown>:	select(noop)\n\
	Shift<BtnUp>:	select(expand)\n\
	:<Btn1Down>:	select(source)\n\
	:<BtnUp>:	select(dest)

*aces.translations: #override \
	<BtnDown>:	select(source)\n\
	<BtnUp>:	select(dest)

*kings.translations: #override \
	<BtnDown>:	select(source)\n\
	<BtnUp>:	select(dest)

*message.justify: left
*message.label: Sly Fox (hard), Version 0.9

*row1.borderWidth: 0
*row2.borderWidth: 0
*row3.borderWidth: 0
*row4.borderWidth: 0
*deck.borderWidth: 0
*deckCount.borderWidth: 0
*draw.borderWidth: 0
*reserveCount.borderWidth: 0
*aces.borderWidth: 0
*kings.borderWidth: 0
*gameState.borderWidth: 0

*menuBar.layout: vertical { \
	5 < -5 >\
	horizontal { \
		5 < -5 > \
		fileMenuButton \
		5 < -5 > \
		newGame \
		5 < -5 > \
		deal \
		5 < -5 > \
		undo \
		5 < -5 > \
		hint \
		5 < -5 > \
		score \
		0 <+inf -inf> \
	} \
	5 < -5 > \
}
*frame.layout: vertical {\
	-1 \
	horizontal {\
		-1 \
		menuBar < +inff -100% * >\
		-1 \
	} \
	10 < -inf > \
	horizontal { \
		10 < -inf > \
		vertical { \
			10 < -inf > \
			aces < +100% -100% * +100% -100% > \
			0 < +inf > \
		} \
		30 < -inf > \
		vertical { \
			10 < -inf > \
			row1 < +100% -100% * +100% -100% > \
			10 < -inf > \
			row2 < +100% -100% * +100% -100% > \
			10 < -inf > \
			row3 < +100% -100% * +100% -100% > \
			10 < -inf > \
			row4 < +100% -100% * +100% -100% > \
			10 < -inf > \
			horizontal { \
				vertical { \
					deckCount < +100% -100% * > \
					deck < +100% -100% * +100% -100% > \
				} \
				vertical { \
					reserveCount < +100% -100% * > \
					draw < +100% -100% * +100% -100% > \
				} \
			} \
		} \
		30 < -inf > \
		vertical { \
			10 < -inf > \
			kings < +100% -100% * +100% -100% > \
			0 < +inf > \
		} \
		10 < -inf > \
	} \
	horizontal { \
		-1 \
		gameState < +inff -100% * > \
		-1 \
	} \
	horizontal { \
		-1 \
		message < +inff -100% * > \
		-1 \
	} \
	-1 \
}

*fileMenuButton.leftBitmap: menu12
*fileMenuButton.menuName: fileMenu
*fileMenuButton.label: File
*fileMenuButton.shapeStyle: oval

*fileMenu.save.label: Save To File
*fileMenu.restore.label: Restore From File
*fileMenu.quit.label: Quit

*newGame.label: New Game

*deal.label: Deal

*undo.label: Undo

*hint.label: Hint

*score.label: Score

*Command.shapeStyle: oval

*frame.translations: #override \
	<Key>u:		slyfoxUndo()\n\
	<Key>n:		slyfoxNewGame()\n\
	<Key>s:		slyfoxScore()\n\
	<Key>d:		slyfoxStartDeal()\n\
	<Key>?:		slyfoxFindAMove()
